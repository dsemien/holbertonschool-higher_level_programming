The ``my_list`` module
======================

Using ``my_list``
-------------------

First import ``my_list`` from the ``1-my_list`` module:

    >>> print_sorted = __import__("1-my_list").MyList.print_sorted

Now use it:

==================
control
==================
    >>> print_sorted([1, 2, 3, 4, 5])
    [1, 2, 3, 4, 5]

    >>> print_sorted([100, 78, 6, 65, 45])
    [6, 45, 65, 78, 100]

==================
pass negative
==================
    >>> print_sorted([-1, -39, -58, -89])
    [-89, -58, -39, -1]

==================
no args
==================
    >>> print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

==================
pass one args
==================
    >>> print_sorted([4])
    [4]

==================
pass a string
==================
    >>> print_sorted(['hi', 'hello', 'is this not right'])
    ['hello', 'hi', 'is this not right']

==================
pass a dictionary
==================
    >>> print_sorted({'cat': 'meow', 'dog': 'bark'})
    ['cat', 'dog']

==================
pass a mixed type
==================
    >>> print_sorted([3, 'hello', -234, 23.5])
    Traceback (most recent call last):
    TypeError: unorderable types: str() < int()

==================
pass a float
==================
    >>> print_sorted([2.3, 45.76, 6.7])
    [2.3, 6.7, 45.76]
